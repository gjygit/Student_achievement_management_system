<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.sms.mapper.ScoreSheetMapper">
  <resultMap id="BaseResultMap" type="com.company.sms.model.ScoreSheet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_course_id" jdbcType="INTEGER" property="studentCourseId" />
    <result column="teacher_course_id" jdbcType="INTEGER" property="teacherCourseId" />
    <result column="exercise_score" jdbcType="INTEGER" property="exerciseScore" />
    <result column="test_score" jdbcType="INTEGER" property="testScore" />
    <result column="examination_score" jdbcType="INTEGER" property="examinationScore" />
    <result column="general_evaluation_score" jdbcType="INTEGER" property="generalEvaluationScore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_course_id, teacher_course_id, exercise_score, test_score, examination_score, 
    general_evaluation_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from score_sheet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from score_sheet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.company.sms.model.ScoreSheet">
    insert into score_sheet (id, student_course_id, teacher_course_id, 
      exercise_score, test_score, examination_score, 
      general_evaluation_score)
    values (#{id,jdbcType=INTEGER}, #{studentCourseId,jdbcType=INTEGER}, #{teacherCourseId,jdbcType=INTEGER}, 
      #{exerciseScore,jdbcType=INTEGER}, #{testScore,jdbcType=INTEGER}, #{examinationScore,jdbcType=INTEGER}, 
      #{generalEvaluationScore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.company.sms.model.ScoreSheet">
    insert into score_sheet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentCourseId != null">
        student_course_id,
      </if>
      <if test="teacherCourseId != null">
        teacher_course_id,
      </if>
      <if test="exerciseScore != null">
        exercise_score,
      </if>
      <if test="testScore != null">
        test_score,
      </if>
      <if test="examinationScore != null">
        examination_score,
      </if>
      <if test="generalEvaluationScore != null">
        general_evaluation_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentCourseId != null">
        #{studentCourseId,jdbcType=INTEGER},
      </if>
      <if test="teacherCourseId != null">
        #{teacherCourseId,jdbcType=INTEGER},
      </if>
      <if test="exerciseScore != null">
        #{exerciseScore,jdbcType=INTEGER},
      </if>
      <if test="testScore != null">
        #{testScore,jdbcType=INTEGER},
      </if>
      <if test="examinationScore != null">
        #{examinationScore,jdbcType=INTEGER},
      </if>
      <if test="generalEvaluationScore != null">
        #{generalEvaluationScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.company.sms.service.ScoreSheetExample" resultType="java.lang.Long">
    select count(*) from score_sheet
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.sms.model.ScoreSheet">
    update score_sheet
    <set>
      <if test="studentCourseId != null">
        student_course_id = #{studentCourseId,jdbcType=INTEGER},
      </if>
      <if test="teacherCourseId != null">
        teacher_course_id = #{teacherCourseId,jdbcType=INTEGER},
      </if>
      <if test="exerciseScore != null">
        exercise_score = #{exerciseScore,jdbcType=INTEGER},
      </if>
      <if test="testScore != null">
        test_score = #{testScore,jdbcType=INTEGER},
      </if>
      <if test="examinationScore != null">
        examination_score = #{examinationScore,jdbcType=INTEGER},
      </if>
      <if test="generalEvaluationScore != null">
        general_evaluation_score = #{generalEvaluationScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.sms.model.ScoreSheet">
    update score_sheet
    set student_course_id = #{studentCourseId,jdbcType=INTEGER},
      teacher_course_id = #{teacherCourseId,jdbcType=INTEGER},
      exercise_score = #{exerciseScore,jdbcType=INTEGER},
      test_score = #{testScore,jdbcType=INTEGER},
      examination_score = #{examinationScore,jdbcType=INTEGER},
      general_evaluation_score = #{generalEvaluationScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>